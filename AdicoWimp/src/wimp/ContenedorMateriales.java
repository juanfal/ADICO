/*
 * ContenedorMateriales.java
 *
 * ADICO: Desarrollo de dos versiones de una Aplicación para el DIseño de COcinas,
 * una con interfaz de usuario tipo WIMP y otra con interfaz IGO.
 *
 * Realizado por: Manuel Flores Vivas <mflores at alu.uma.es>
 * Tutor: Antonio Luis Carrillo León <alcarrillo at uma.es>
 *
 * Proyecto Fin de Carrera
 * Ingeniería Técnica en Informática de Sistemas (Universidad de Málaga)
 */

package wimp;

import java.io.*;
import javax.swing.*;
import java.awt.*;
import cocina.*;
import controlador.*;
import java.text.*;

/**
 *
 * @author  Manuel Flores Vivas
 */
public class ContenedorMateriales extends javax.swing.JPanel {

    /** Creates new form ContenedorFormas */
    public ContenedorMateriales() {
        initComponents();
        cargar(jComboEncimeras, ".."+File.separator+"ficheros"+File.separator+"encimeras");
        cargar(jComboMaderas,   ".."+File.separator+"ficheros"+File.separator+"maderas"  );
        cargar(jComboTiradores, ".."+File.separator+"ficheros"+File.separator+"tiradores");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        softBevelBorder1 = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        softBevelBorder2 = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        softBevelBorder3 = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        etchedBorder1 = (javax.swing.border.EtchedBorder)javax.swing.BorderFactory.createEtchedBorder();
        jButton1 = new javax.swing.JButton();
        jComboEncimeras = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboMaderas = new javax.swing.JComboBox();
        jComboTiradores = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setPreferredSize(new java.awt.Dimension(250, 556));

        jButton1.setText("Aplicar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboEncimeras.setMaximumRowCount(7);
        jComboEncimeras.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Seleccionar materiales:");

        jButton2.setText("Amueblar");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboMaderas.setMaximumRowCount(5);
        jComboMaderas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboTiradores.setMaximumRowCount(4);
        jComboTiradores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11));
        jLabel1.setText("Encimeras:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11));
        jLabel2.setText("Maderas:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11));
        jLabel3.setText("Tiradores:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboMaderas, 0, 220, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboEncimeras, 0, 220, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(171, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(183, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboTiradores, 0, 220, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboEncimeras, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboMaderas, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboTiradores, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

//clase que implementa ListCellRenderer para poder usar JLabel con iconos en una lista
    protected class ElementoCatalogo extends JLabel implements ListCellRenderer {
     public Component getListCellRendererComponent(
       JList list,              // the list
       Object value,            // value to display
       int index,               // cell index
       boolean isSelected,      // is the cell selected
       boolean cellHasFocus)    // does the cell have focus
     {
         Mostrable most = ((Mostrable)value);
         DecimalFormat df = new DecimalFormat("0.##");
         String titulo = "<html>"+most.getNombre()+"<br>"+most.getTipo()+"<br>"+df.format(most.getPrecio())+" €</html>";
         setText(titulo); //mostrar nombre

         setToolTipText(most.getDescripcion());
         String ruta = ((Mostrable)value).getFichero(); //tomar ruta
         ruta = ruta.substring(0,ruta.lastIndexOf(File.separator)+1);
         ImageIcon ii = new ImageIcon(ruta+((Mostrable)value).getFoto());
         ii.setImage(ii.getImage().getScaledInstance(64, 64, Image.SCALE_DEFAULT));
         setIcon(ii); //cargar foto reducida
         if (isSelected) {
             setBackground(list.getSelectionBackground());
             setForeground(list.getSelectionForeground());
         } else {
             setBackground(list.getBackground());
             setForeground(list.getForeground());
         }
         setEnabled(list.isEnabled());
         setFont(list.getFont());
         setOpaque(true);
         return this;
     }
 }

    private void cargar(JComboBox combo, String ruta) {
        //añadir contenido a la lista
        combo.removeAllItems();
        File directorio = new File(ruta);
        if (directorio.isDirectory()) {
            File[] elementos = directorio.listFiles();
            java.util.Arrays.sort(elementos);

            if (elementos!=null) {
                for (int i=0;i<elementos.length;i++) {
                    if (elementos[i].getAbsolutePath().endsWith(".xml")) { //deteccion de extension
                        Mostrable elementoActual = new Mostrable();
                        elementoActual.abrir(elementos[i].getPath());
                        combo.addItem(elementoActual);
                    }
                }
            }
        }

        //renderer
        combo.setRenderer(new ElementoCatalogo());
    }

    //metodos para dejar seleccionados los materiales previos
    public void seleccionar(Mostrable encimera, Mostrable madera, Mostrable tirador) {
        if (encimera!=null) seleccionarCombo(jComboEncimeras, encimera);
        if (madera!=null) seleccionarCombo(jComboMaderas, madera);
        if (tirador!=null) seleccionarCombo(jComboTiradores, tirador);
    }

    private void seleccionarCombo(JComboBox jc, Mostrable elem) {
        for(int i=0; i<jc.getItemCount();i++) { //comparacion por nombre de fichero
            if (((Mostrable)jc.getItemAt(i)).getFichero().equals(elem.getFichero())) {
                jc.setSelectedIndex(i);
            }
        }
    }

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    Controlador.getInstance().elegirMateriales((Mostrable)jComboEncimeras.getSelectedItem(),
            (Mostrable)jComboMaderas.getSelectedItem(), (Mostrable)jComboTiradores.getSelectedItem());
    jButton2.setEnabled(true);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    Controlador.getInstance().mueble();
}//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.border.EtchedBorder etchedBorder1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboEncimeras;
    private javax.swing.JComboBox jComboMaderas;
    private javax.swing.JComboBox jComboTiradores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.border.SoftBevelBorder softBevelBorder1;
    private javax.swing.border.SoftBevelBorder softBevelBorder2;
    private javax.swing.border.SoftBevelBorder softBevelBorder3;
    // End of variables declaration//GEN-END:variables

}
