/*
 * Catalogo.java
 *
 * ADICO: Desarrollo de dos versiones de una Aplicación para el DIseño de COcinas,
 * una con interfaz de usuario tipo WIMP y otra con interfaz IGO.
 *
 * Realizado por: Manuel Flores Vivas <mflores at alu.uma.es>
 * Tutor: Antonio Luis Carrillo León <alcarrillo at uma.es>
 *
 * Proyecto Fin de Carrera
 * Ingeniería Técnica en Informática de Sistemas (Universidad de Málaga)
 */

package galeria;

import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author  Manuel Flores Vivas
 */
public class Catalogo extends javax.swing.JPanel implements vista.InterfazBarraEstado {
    private Timer t;

    /** Creates new form Catalogo */
    public Catalogo() {
        initComponents();
        jLabelEstado.setVisible(false);
    }
    
    public void rellenarCatalogo(String ruta) {
        File directorio = new File(ruta);

        if (directorio.isDirectory()) {
            File[] elementos = directorio.listFiles();
            java.util.Arrays.sort(elementos);
            
            if (elementos!=null) {
                for (int i=0;i<elementos.length;i++) {
                    if (elementos[i].getAbsolutePath().endsWith(".xml")) { //deteccion de extension
                        
                        cocina.Mostrable elementoActual = new cocina.Mostrable();
                        elementoActual.abrir(elementos[i].getPath());
                        ElementoCatalogo elemActual = new ElementoCatalogo();
                        elemActual.rellenarElemento(elementos[i].toString(), ruta.substring(0,ruta.lastIndexOf(File.separator)+1) + elementoActual.getFoto(), elementoActual.getNombre(), elementoActual.getTipo(), elementoActual.getDescripcion(), elementoActual.getAltura(), elementoActual.getAnchura(), elementoActual.getProfundidad(), elementoActual.getPrecio());
                        JPanel contenedor = new JPanel();
                        contenedor.setBackground(Color.WHITE);
                        contenedor.add(elemActual);
                        
                        //un click en el contenedor sirve para el elemento del catalogo
                        contenedor.addMouseListener(elemActual.getListeners(MouseListener.class)[0]);
                        panelCatalogo.add(contenedor);
                    }
                }

                int limite = 12-panelCatalogo.getComponentCount();
                for (int i=1; i<=limite; i++) { //completar el grid con componentes vacios
                    JPanel contenedor = new JPanel();
                    contenedor.setBackground(Color.WHITE);
                    panelCatalogo.add(contenedor);
                }
            }
        }
    }
    
    //quita el borde si algun elemento del catalogo lo tiene
    public void deseleccionarTodo() { 
        for (Component c : panelCatalogo.getComponents()) {
            //hay contenedores vacios
            if (((JPanel)c).getComponents().length > 0) ((JPanel)((JPanel)c).getComponents()[0]).setBorder(null);
        }
    }
    
    public void setEnabled(boolean b) {
        for (Component c : panelCatalogo.getComponents()) {
            //hay contenedores vacios
            if (((JPanel)c).getComponents().length > 0) ((JPanel)((JPanel)c).getComponents()[0]).setEnabled(b);
        }
    }

    //cambia u oculta el mensaje en la barra superior de estado
    public void cambiarEstado(String estado) {
        if (t!=null) { //timer
                t.stop();
        }

        if (estado.equals("Listo") || estado.equals("")) {
            jLabelEstado.setVisible(false);
        } else {
            jLabelEstado.setVisible(true);
            jLabelEstado.setText(" ".concat(estado));

            //timer blink
            t = new Timer(400, new ActionListener() {
                Color rosa = new Color(255,99,93);
                Color marron = new Color(220,46,46);
                boolean estado = false;
                public void actionPerformed(ActionEvent e) {
                    jLabelEstado.setBackground(estado?marron:rosa);
                    estado=!estado;
                }
            });
            t.setInitialDelay(200);
            t.start();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCatalogo = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelEstado = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setLayout(new java.awt.BorderLayout());

        panelCatalogo.setBackground(new java.awt.Color(255, 255, 255));
        panelCatalogo.setLayout(new java.awt.GridLayout(0, 4));
        add(panelCatalogo, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(50, 25));
        jPanel2.setPreferredSize(new java.awt.Dimension(632, 25));

        jLabelEstado.setBackground(new java.awt.Color(255, 99, 93));
        jLabelEstado.setFont(new java.awt.Font("Dialog", 1, 14));
        jLabelEstado.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(136, 6, 6), 2));
        jLabelEstado.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelCatalogo;
    // End of variables declaration//GEN-END:variables
    
}
